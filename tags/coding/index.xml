<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>coding on Sky</title>
    <link>http://www.jacomago.dev/tags/coding/</link>
    <description>Recent content in coding on Sky</description>
    <image>
      <url>http://www.jacomago.dev/paint_splatter.png</url>
      <link>http://www.jacomago.dev/paint_splatter.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Jul 2022 17:03:38 +0200</lastBuildDate><atom:link href="http://www.jacomago.dev/tags/coding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Story Stains: Full Stack Enums</title>
      <link>http://www.jacomago.dev/post/story_stains_enums/</link>
      <pubDate>Sat, 16 Jul 2022 17:03:38 +0200</pubDate>
      
      <guid>http://www.jacomago.dev/post/story_stains_enums/</guid>
      <description>Another post about building Story Stains, the previous one can be found at &amp;ldquo;Story Stains: Frontend&amp;rdquo;.
Enums Enums are a way of having multiple options programmatically, when a Boolean (true or false) isn&amp;rsquo;t expressive enough. Think traffic lights: Red, Orange, Green, Http Status Codes: Unauthorized, Not Found, OK,&amp;hellip;, and Countries: Germany, Poland, Great Britain, England? UK?&amp;hellip;
Some things seem obviously able to fit into an Enum data type, until they don&amp;rsquo;t.</description>
    </item>
    
    <item>
      <title>Story Stains: Frontend</title>
      <link>http://www.jacomago.dev/post/story_stains_frontend/</link>
      <pubDate>Fri, 08 Jul 2022 11:53:48 +0200</pubDate>
      
      <guid>http://www.jacomago.dev/post/story_stains_frontend/</guid>
      <description>Another post about building Story Stains, the previous one can be found at &amp;ldquo;Story Stains: Backend&amp;rdquo;.
Flutter Last year I took a in Angular from Udemy, but for this project as Angular appears to be slowly dying, I decided to use another possible Google dead-horse, Flutter.
This time I didn&amp;rsquo;t use a book, or tutorial or such to start building the application. For one, I couldn&amp;rsquo;t find a good up to date tutorial and I somehow expected a quite prescriptive development environment, which was not what happened.</description>
    </item>
    
    <item>
      <title>Story Stains: The Backend</title>
      <link>http://www.jacomago.dev/post/story_stains_backend/</link>
      <pubDate>Wed, 29 Jun 2022 13:30:48 +0200</pubDate>
      
      <guid>http://www.jacomago.dev/post/story_stains_backend/</guid>
      <description>Another post about building Story Stains, the previous one can be found at &amp;ldquo;Story Stains: An Idea forms&amp;rdquo;.
Rust I like to follow trends as much as the next guy, so I&amp;rsquo;m writing the backend in rust.
There were two main resources that I used:
&amp;lsquo;Zero To Production In Rust&amp;rsquo; (zero2prod), a great book about building a backend service from scratch using actix. It&amp;rsquo;s what I based most of my server code on.</description>
    </item>
    
  </channel>
</rss>
